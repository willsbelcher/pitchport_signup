{"ast":null,"code":"var _jsxFileName = \"/Users/willbelcher/Desktop/Dev/react/andrew_project/andrew_react_project/src/Form.js\";\nimport React, { useState } from 'react';\nimport { CardNumberElement, CardExpiryElement, CardCvcElement, useStripe } from '@stripe/react-stripe-js';\nexport const Form = () => {\n  const stripe = useStripe();\n  const [cardNumber, setCardNumber] = useState(\"\");\n  const [cardExpiry, setCardExpiry] = useState(\"\");\n  const [cardCvc, setCardCvc] = useState(\"\");\n  const [userFirst, setUserFirst] = useState(\"\");\n  const [userLast, setUserLast] = useState(\"\");\n  const [city, setCity] = useState(\"\");\n  const [state, setState] = useState(\"\");\n  const [zip, setZip] = useState(\"\");\n\n  const handleSubmit = async event => {\n    // Block native form submission.\n    event.preventDefault();\n\n    if (!stripe) {\n      // Stripe.js has not loaded yet. Make sure to disable\n      // form submission until Stripe.js has loaded.\n      return;\n    } // Get a reference to a mounted CardElement. Elements knows how\n    // to find your CardElement because there can only ever be one of\n    // each type of element.\n\n\n    console.log(); // Use your card Element with other Stripe.js APIs\n  };\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CardNumberElement, {\n    onChange: newCardNumber => setCardNumber(newCardNumber),\n    options: {\n      value: cardNumber\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(CardExpiryElement, {\n    onChange: newCardExpiry => setCardExpiry(newCardExpiry),\n    options: {\n      value: cardExpiry\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(CardCvcElement, {\n    onChange: newCardCvc => setCardCvc(newCardCvc),\n    options: {\n      value: cardCvc\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: {\n      userFirst\n    },\n    onChange: newUserFirst => setUserFirst(newUserFirst),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: {\n      userLast\n    },\n    onChange: newUserLast => setUserLast(newUserLast),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: {\n      city\n    },\n    onChange: newCity => setCity(newCity),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: {\n      state\n    },\n    onChange: newState => setState(newState),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: {\n      zip\n    },\n    onChange: newZip => setZip(newZip),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    disabled: !stripe,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, \"Pay\"));\n};","map":{"version":3,"sources":["/Users/willbelcher/Desktop/Dev/react/andrew_project/andrew_react_project/src/Form.js"],"names":["React","useState","CardNumberElement","CardExpiryElement","CardCvcElement","useStripe","Form","stripe","cardNumber","setCardNumber","cardExpiry","setCardExpiry","cardCvc","setCardCvc","userFirst","setUserFirst","userLast","setUserLast","city","setCity","state","setState","zip","setZip","handleSubmit","event","preventDefault","console","log","newCardNumber","value","newCardExpiry","newCardCvc","newUserFirst","newUserLast","newCity","newState","newZip"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport {CardNumberElement, CardExpiryElement, CardCvcElement, useStripe,} from '@stripe/react-stripe-js';\n\nexport const Form = () => {\n  const stripe = useStripe();\n  const [cardNumber, setCardNumber] = useState(\"\");\n  const [cardExpiry, setCardExpiry] = useState(\"\");\n  const [cardCvc, setCardCvc] = useState(\"\");\n  const [userFirst, setUserFirst] = useState(\"\");\n  const [userLast, setUserLast] = useState(\"\");\n  const [city, setCity] = useState(\"\");\n  const [state, setState] = useState(\"\");\n  const [zip, setZip] = useState(\"\");\n\n\n\n  const handleSubmit = async (event) => {\n    // Block native form submission.\n    event.preventDefault();\n\n    if (!stripe) {\n      // Stripe.js has not loaded yet. Make sure to disable\n      // form submission until Stripe.js has loaded.\n      return;\n    }\n\n    // Get a reference to a mounted CardElement. Elements knows how\n    // to find your CardElement because there can only ever be one of\n    // each type of element.\n  console.log()\n\n    // Use your card Element with other Stripe.js APIs\n    \n\n    \n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <CardNumberElement onChange={(newCardNumber) => setCardNumber(newCardNumber)} options={{value: cardNumber}}/>\n      <CardExpiryElement onChange={(newCardExpiry) => setCardExpiry(newCardExpiry)} options={{value: cardExpiry}}/>\n      <CardCvcElement onChange={(newCardCvc) => setCardCvc(newCardCvc)} options={{value: cardCvc}}/>\n      <input type=\"text\" value={{userFirst}} onChange={(newUserFirst) => setUserFirst(newUserFirst)} />\n      <input type=\"text\" value={{userLast}} onChange={(newUserLast) => setUserLast(newUserLast)} />\n      <input type=\"text\" value={{city}} onChange={(newCity) => setCity(newCity)} />\n      <input type=\"text\" value={{state}} onChange={(newState) => setState(newState)} />\n      <input type=\"text\" value={{zip}} onChange={(newZip) => setZip(newZip)} />\n\n      <button type=\"submit\" disabled={!stripe}>\n        Pay\n      </button>\n    </form>\n  );\n};"]},"metadata":{},"sourceType":"module"}