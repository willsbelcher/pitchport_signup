{"ast":null,"code":"var _jsxFileName = \"/Users/willbelcher/Desktop/Dev/react/andrew_project/andrew_react_project/src/Form.js\";\nimport React, { useState } from 'react';\nimport { CardElement, useStripe, useElements } from '@stripe/react-stripe-js';\nexport const Form = () => {\n  const stripe = useStripe();\n  const elements = useElements();\n  const [cardNumber, setCardNumber] = useState(\"\");\n\n  const handleSubmit = async event => {\n    // Block native form submission.\n    event.preventDefault();\n\n    if (!stripe || !elements) {\n      // Stripe.js has not loaded yet. Make sure to disable\n      // form submission until Stripe.js has loaded.\n      return;\n    } // Get a reference to a mounted CardElement. Elements knows how\n    // to find your CardElement because there can only ever be one of\n    // each type of element.\n\n\n    const cardElement = elements.getElement(CardElement); // Use your card Element with other Stripe.js APIs\n\n    const {\n      error,\n      paymentMethod\n    } = await stripe.createPaymentMethod({\n      type: 'card',\n      card: cardElement\n    });\n\n    if (error) {\n      console.log('[error]', error);\n    } else {\n      console.log('[PaymentMethod]', paymentMethod);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CardElement, {\n    options: {\n      value: cardNumber\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    disabled: !stripe,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, \"Pay\"));\n};","map":{"version":3,"sources":["/Users/willbelcher/Desktop/Dev/react/andrew_project/andrew_react_project/src/Form.js"],"names":["React","useState","CardElement","useStripe","useElements","Form","stripe","elements","cardNumber","setCardNumber","handleSubmit","event","preventDefault","cardElement","getElement","error","paymentMethod","createPaymentMethod","type","card","console","log","value"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAAQC,WAAR,EAAqBC,SAArB,EAAgCC,WAAhC,QAAkD,yBAAlD;AAEA,OAAO,MAAMC,IAAI,GAAG,MAAM;AACxB,QAAMC,MAAM,GAAGH,SAAS,EAAxB;AACA,QAAMI,QAAQ,GAAGH,WAAW,EAA5B;AACA,QAAM,CAACI,UAAD,EAAaC,aAAb,IAA8BR,QAAQ,CAAC,EAAD,CAA5C;;AAEA,QAAMS,YAAY,GAAG,MAAOC,KAAP,IAAiB;AACpC;AACAA,IAAAA,KAAK,CAACC,cAAN;;AAEA,QAAI,CAACN,MAAD,IAAW,CAACC,QAAhB,EAA0B;AACxB;AACA;AACA;AACD,KARmC,CAUpC;AACA;AACA;;;AACA,UAAMM,WAAW,GAAGN,QAAQ,CAACO,UAAT,CAAoBZ,WAApB,CAApB,CAboC,CAepC;;AACA,UAAM;AAACa,MAAAA,KAAD;AAAQC,MAAAA;AAAR,QAAyB,MAAMV,MAAM,CAACW,mBAAP,CAA2B;AAC9DC,MAAAA,IAAI,EAAE,MADwD;AAE9DC,MAAAA,IAAI,EAAEN;AAFwD,KAA3B,CAArC;;AAKA,QAAIE,KAAJ,EAAW;AACTK,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBN,KAAvB;AACD,KAFD,MAEO;AACLK,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BL,aAA/B;AACD;AACF,GA1BD;;AA4BA,sBACE;AAAM,IAAA,QAAQ,EAAEN,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,WAAD;AAAa,IAAA,OAAO,EAAE;AAACY,MAAAA,KAAK,EAAEd;AAAR,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,QAAQ,EAAE,CAACF,MAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAFF,CADF;AAQD,CAzCM","sourcesContent":["import React, { useState } from 'react';\nimport {CardElement, useStripe, useElements} from '@stripe/react-stripe-js';\n\nexport const Form = () => {\n  const stripe = useStripe();\n  const elements = useElements();\n  const [cardNumber, setCardNumber] = useState(\"\");\n\n  const handleSubmit = async (event) => {\n    // Block native form submission.\n    event.preventDefault();\n\n    if (!stripe || !elements) {\n      // Stripe.js has not loaded yet. Make sure to disable\n      // form submission until Stripe.js has loaded.\n      return;\n    }\n\n    // Get a reference to a mounted CardElement. Elements knows how\n    // to find your CardElement because there can only ever be one of\n    // each type of element.\n    const cardElement = elements.getElement(CardElement);\n\n    // Use your card Element with other Stripe.js APIs\n    const {error, paymentMethod} = await stripe.createPaymentMethod({\n      type: 'card',\n      card: cardElement,\n    });\n\n    if (error) {\n      console.log('[error]', error);\n    } else {\n      console.log('[PaymentMethod]', paymentMethod);\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <CardElement options={{value: cardNumber}}/>\n      <button type=\"submit\" disabled={!stripe}>\n        Pay\n      </button>\n    </form>\n  );\n};"]},"metadata":{},"sourceType":"module"}