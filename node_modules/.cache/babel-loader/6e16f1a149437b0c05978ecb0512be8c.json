{"ast":null,"code":"var _jsxFileName = \"/Users/willbelcher/Desktop/Dev/react/andrew_project/andrew_react_project/src/Form.js\";\nimport React, { useState } from 'react';\nimport { CardNumberElement, CardExpiryElement, CardCvcElement, useStripe } from '@stripe/react-stripe-js';\nexport const Form = () => {\n  const stripe = useStripe();\n  const [cardNumber, setCardNumber] = useState(\"\");\n  const [cardExpiry, setCardExpiry] = useState(\"\");\n  const [cardCvc, setCardCvc] = useState(\"\");\n  const [userFirst, setUserFirst] = useState(\"\");\n  const [userLast, setUserLast] = useState(\"\");\n  const [city, setCity] = useState(\"\");\n  const [state, setState] = useState(\"\");\n  const [zip, setZip] = useState(\"\");\n\n  const handleSubmit = async event => {\n    // Block native form submission.\n    event.preventDefault();\n    console.log(cardNumber, cardExpiry, userFirst, userLast);\n\n    if (!stripe) {\n      // Stripe.js has not loaded yet. Make sure to disable\n      // form submission until Stripe.js has loaded.\n      return;\n    } // Get a reference to a mounted CardElement. Elements knows how\n    // to find your CardElement because there can only ever be one of\n    // each type of element.\n    // Use your card Element with other Stripe.js APIs\n\n  };\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CardNumberElement, {\n    onChange: newCardNumber => setCardNumber(newCardNumber),\n    options: {\n      value: cardNumber\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(CardExpiryElement, {\n    onChange: newCardExpiry => setCardExpiry(newCardExpiry),\n    options: {\n      value: cardExpiry\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(CardCvcElement, {\n    onChange: newCardCvc => setCardCvc(newCardCvc),\n    options: {\n      value: cardCvc\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: userFirst,\n    onChange: event => setUserFirst(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: userLast,\n    onChange: event => setUserLast(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: city,\n    onChange: event => setCity(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: state,\n    onChange: event => setState(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: zip,\n    onChange: event => setZip(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    disabled: !stripe,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, \"Pay\"));\n};","map":{"version":3,"sources":["/Users/willbelcher/Desktop/Dev/react/andrew_project/andrew_react_project/src/Form.js"],"names":["React","useState","CardNumberElement","CardExpiryElement","CardCvcElement","useStripe","Form","stripe","cardNumber","setCardNumber","cardExpiry","setCardExpiry","cardCvc","setCardCvc","userFirst","setUserFirst","userLast","setUserLast","city","setCity","state","setState","zip","setZip","handleSubmit","event","preventDefault","console","log","newCardNumber","value","newCardExpiry","newCardCvc","target"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAAQC,iBAAR,EAA2BC,iBAA3B,EAA8CC,cAA9C,EAA8DC,SAA9D,QAA+E,yBAA/E;AAEA,OAAO,MAAMC,IAAI,GAAG,MAAM;AACxB,QAAMC,MAAM,GAAGF,SAAS,EAAxB;AACA,QAAM,CAACG,UAAD,EAAaC,aAAb,IAA8BR,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACS,UAAD,EAAaC,aAAb,IAA8BV,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACW,OAAD,EAAUC,UAAV,IAAwBZ,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACa,SAAD,EAAYC,YAAZ,IAA4Bd,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACe,QAAD,EAAWC,WAAX,IAA0BhB,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACiB,IAAD,EAAOC,OAAP,IAAkBlB,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACmB,KAAD,EAAQC,QAAR,IAAoBpB,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACqB,GAAD,EAAMC,MAAN,IAAgBtB,QAAQ,CAAC,EAAD,CAA9B;;AAIA,QAAMuB,YAAY,GAAG,MAAOC,KAAP,IAAiB;AACpC;AACAA,IAAAA,KAAK,CAACC,cAAN;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYpB,UAAZ,EAAwBE,UAAxB,EAAoCI,SAApC,EAA+CE,QAA/C;;AAEA,QAAI,CAACT,MAAL,EAAa;AACX;AACA;AACA;AACD,KATmC,CAWpC;AACA;AACA;AACA;;AAID,GAlBD;;AAoBA,sBACE;AAAM,IAAA,QAAQ,EAAEiB,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,iBAAD;AAAmB,IAAA,QAAQ,EAAGK,aAAD,IAAmBpB,aAAa,CAACoB,aAAD,CAA7D;AAA8E,IAAA,OAAO,EAAE;AAACC,MAAAA,KAAK,EAAEtB;AAAR,KAAvF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,iBAAD;AAAmB,IAAA,QAAQ,EAAGuB,aAAD,IAAmBpB,aAAa,CAACoB,aAAD,CAA7D;AAA8E,IAAA,OAAO,EAAE;AAACD,MAAAA,KAAK,EAAEpB;AAAR,KAAvF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAGE,oBAAC,cAAD;AAAgB,IAAA,QAAQ,EAAGsB,UAAD,IAAgBnB,UAAU,CAACmB,UAAD,CAApD;AAAkE,IAAA,OAAO,EAAE;AAACF,MAAAA,KAAK,EAAElB;AAAR,KAA3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,eAKE;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,KAAK,EAAEE,SAA1B;AAAqC,IAAA,QAAQ,EAAGW,KAAD,IAAWV,YAAY,CAACU,KAAK,CAACQ,MAAN,CAAaH,KAAd,CAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,eAOE;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,KAAK,EAAEd,QAA1B;AAAoC,IAAA,QAAQ,EAAGS,KAAD,IAAWR,WAAW,CAACQ,KAAK,CAACQ,MAAN,CAAaH,KAAd,CAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,eAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,eASE;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,KAAK,EAAEZ,IAA1B;AAAgC,IAAA,QAAQ,EAAGO,KAAD,IAAWN,OAAO,CAACM,KAAK,CAACQ,MAAN,CAAaH,KAAd,CAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,eAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVF,eAWE;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,KAAK,EAAEV,KAA1B;AAAiC,IAAA,QAAQ,EAAGK,KAAD,IAAWJ,QAAQ,CAACI,KAAK,CAACQ,MAAN,CAAaH,KAAd,CAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXF,eAYE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZF,eAaE;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,KAAK,EAAER,GAA1B;AAA+B,IAAA,QAAQ,EAAGG,KAAD,IAAWF,MAAM,CAACE,KAAK,CAACQ,MAAN,CAAaH,KAAd,CAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAbF,eAcE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAdF,eAeE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,QAAQ,EAAE,CAACvB,MAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAfF,CADF;AAqBD,CAtDM","sourcesContent":["import React, { useState } from 'react';\nimport {CardNumberElement, CardExpiryElement, CardCvcElement, useStripe,} from '@stripe/react-stripe-js';\n\nexport const Form = () => {\n  const stripe = useStripe();\n  const [cardNumber, setCardNumber] = useState(\"\");\n  const [cardExpiry, setCardExpiry] = useState(\"\");\n  const [cardCvc, setCardCvc] = useState(\"\");\n  const [userFirst, setUserFirst] = useState(\"\");\n  const [userLast, setUserLast] = useState(\"\");\n  const [city, setCity] = useState(\"\");\n  const [state, setState] = useState(\"\");\n  const [zip, setZip] = useState(\"\");\n\n\n\n  const handleSubmit = async (event) => {\n    // Block native form submission.\n    event.preventDefault();\n    console.log(cardNumber, cardExpiry, userFirst, userLast)\n\n    if (!stripe) {\n      // Stripe.js has not loaded yet. Make sure to disable\n      // form submission until Stripe.js has loaded.\n      return;\n    }\n\n    // Get a reference to a mounted CardElement. Elements knows how\n    // to find your CardElement because there can only ever be one of\n    // each type of element.\n    // Use your card Element with other Stripe.js APIs\n    \n\n    \n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <CardNumberElement onChange={(newCardNumber) => setCardNumber(newCardNumber)} options={{value: cardNumber}}/>\n      <CardExpiryElement onChange={(newCardExpiry) => setCardExpiry(newCardExpiry)} options={{value: cardExpiry}}/>\n      <CardCvcElement onChange={(newCardCvc) => setCardCvc(newCardCvc)} options={{value: cardCvc}}/>\n      <br></br>\n      <input type=\"text\" value={userFirst} onChange={(event) => setUserFirst(event.target.value)} />\n      <br></br>\n      <input type=\"text\" value={userLast} onChange={(event) => setUserLast(event.target.value)} />\n      <br></br>\n      <input type=\"text\" value={city} onChange={(event) => setCity(event.target.value)} />\n      <br></br>\n      <input type=\"text\" value={state} onChange={(event) => setState(event.target.value)} />\n      <br></br>\n      <input type=\"text\" value={zip} onChange={(event) => setZip(event.target.value)} />\n      <br></br>\n      <button type=\"submit\" disabled={!stripe}>\n        Pay\n      </button>\n    </form>\n  );\n};"]},"metadata":{},"sourceType":"module"}