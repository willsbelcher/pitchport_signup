{"ast":null,"code":"var _jsxFileName = \"/Users/willbelcher/Desktop/Dev/react/andrew_project/andrew_react_project/src/Form.js\";\nimport React, { useState } from 'react';\nimport { CardNumberElement, CardExpiryElement, CardCvcElement, useStripe, useElements } from '@stripe/react-stripe-js';\nexport const Form = () => {\n  const stripe = useStripe();\n  const [cardNumber, setCardNumber] = useState(\"\");\n\n  const handleSubmit = async event => {\n    // Block native form submission.\n    event.preventDefault();\n\n    if (!stripe || !elements) {\n      // Stripe.js has not loaded yet. Make sure to disable\n      // form submission until Stripe.js has loaded.\n      return;\n    } // Get a reference to a mounted CardElement. Elements knows how\n    // to find your CardElement because there can only ever be one of\n    // each type of element.\n\n\n    console.log(); // Use your card Element with other Stripe.js APIs\n  };\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CardNumberElement, {\n    onChange: newCardNumber => setCardNumber(newCardNumber),\n    options: {\n      value: cardNumber\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    disabled: !stripe,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, \"Pay\"));\n};","map":{"version":3,"sources":["/Users/willbelcher/Desktop/Dev/react/andrew_project/andrew_react_project/src/Form.js"],"names":["React","useState","CardNumberElement","CardExpiryElement","CardCvcElement","useStripe","useElements","Form","stripe","cardNumber","setCardNumber","handleSubmit","event","preventDefault","elements","console","log","newCardNumber","value"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAAQC,iBAAR,EAA2BC,iBAA3B,EAA8CC,cAA9C,EAA8DC,SAA9D,EAAyEC,WAAzE,QAA2F,yBAA3F;AAEA,OAAO,MAAMC,IAAI,GAAG,MAAM;AACxB,QAAMC,MAAM,GAAGH,SAAS,EAAxB;AACA,QAAM,CAACI,UAAD,EAAaC,aAAb,IAA8BT,QAAQ,CAAC,EAAD,CAA5C;;AAEA,QAAMU,YAAY,GAAG,MAAOC,KAAP,IAAiB;AACpC;AACAA,IAAAA,KAAK,CAACC,cAAN;;AAEA,QAAI,CAACL,MAAD,IAAW,CAACM,QAAhB,EAA0B;AACxB;AACA;AACA;AACD,KARmC,CAUpC;AACA;AACA;;;AACFC,IAAAA,OAAO,CAACC,GAAR,GAbsC,CAepC;AAID,GAnBD;;AAqBA,sBACE;AAAM,IAAA,QAAQ,EAAEL,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,iBAAD;AAAmB,IAAA,QAAQ,EAAGM,aAAD,IAAmBP,aAAa,CAACO,aAAD,CAA7D;AAA8E,IAAA,OAAO,EAAE;AAACC,MAAAA,KAAK,EAAET;AAAR,KAAvF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,QAAQ,EAAE,CAACD,MAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAFF,CADF;AAQD,CAjCM","sourcesContent":["import React, { useState } from 'react';\nimport {CardNumberElement, CardExpiryElement, CardCvcElement, useStripe, useElements} from '@stripe/react-stripe-js';\n\nexport const Form = () => {\n  const stripe = useStripe();\n  const [cardNumber, setCardNumber] = useState(\"\");\n\n  const handleSubmit = async (event) => {\n    // Block native form submission.\n    event.preventDefault();\n\n    if (!stripe || !elements) {\n      // Stripe.js has not loaded yet. Make sure to disable\n      // form submission until Stripe.js has loaded.\n      return;\n    }\n\n    // Get a reference to a mounted CardElement. Elements knows how\n    // to find your CardElement because there can only ever be one of\n    // each type of element.\n  console.log()\n\n    // Use your card Element with other Stripe.js APIs\n    \n\n    \n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <CardNumberElement onChange={(newCardNumber) => setCardNumber(newCardNumber)} options={{value: cardNumber}}/>\n      <button type=\"submit\" disabled={!stripe}>\n        Pay\n      </button>\n    </form>\n  );\n};"]},"metadata":{},"sourceType":"module"}